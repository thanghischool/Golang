basePath: /v1
definitions:
  clients.AppError:
    properties:
      error_key:
        type: string
      log:
        type: string
      message:
        type: string
      status_code:
        type: integer
    type: object
  clients.Status:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Deleted
    - Active
    - Done
  clients.SuccessRes:
    properties:
      data: {}
      filter: {}
      paging: {}
    type: object
  domain.ItemCreation:
    properties:
      description:
        type: string
      id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
  domain.ItemUpdate:
    properties:
      description:
        type: string
      status:
        $ref: '#/definitions/domain.Status'
      title:
        type: string
      updated_at:
        type: string
    type: object
  domain.Status:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - Deleted
    - Active
    - Done
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/domain.UserRole'
      status:
        $ref: '#/definitions/clients.Status'
      updated_at:
        type: string
    type: object
  domain.UserCreate:
    properties:
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  domain.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  domain.UserRole:
    enum:
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - RoleUser
    - RoleAdmin
  domain.UserUpdate:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API cho các thao tác CRUD của người dùng và item trong Todo App.
  title: Todo App APIx
  version: "1.0"
paths:
  /items:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a list of all items.
      produces:
      - application/json
      responses:
        "200":
          description: List of items retrieved successfully
          schema:
            $ref: '#/definitions/clients.SuccessRes'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/clients.AppError'
      security:
      - BearerAuth: []
      summary: Get all items
      tags:
      - Items
    post:
      consumes:
      - application/json
      description: This endpoint allows authenticated users to create an item.
      parameters:
      - description: Item creation payload
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/domain.ItemCreation'
      produces:
      - application/json
      responses:
        "200":
          description: Item successfully created
          schema:
            $ref: '#/definitions/clients.SuccessRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/clients.AppError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/clients.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/clients.AppError'
      security:
      - BearerAuth: []
      summary: Create a new item
      tags:
      - Items
  /items/{id}:
    delete:
      consumes:
      - application/json
      description: This endpoint deletes an item identified by its unique ID.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Item deleted successfully
          schema:
            $ref: '#/definitions/clients.SuccessRes'
        "400":
          description: Invalid ID format or bad request
          schema:
            $ref: '#/definitions/clients.AppError'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/clients.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/clients.AppError'
      security:
      - BearerAuth: []
      summary: Delete an item
      tags:
      - Items
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a single item by its unique identifier.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Item retrieved successfully
          schema:
            $ref: '#/definitions/clients.SuccessRes'
        "400":
          description: Invalid ID format or bad request
          schema:
            $ref: '#/definitions/clients.AppError'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/clients.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/clients.AppError'
      security:
      - BearerAuth: []
      summary: Get an item by ID
      tags:
      - Items
    put:
      consumes:
      - application/json
      description: This endpoint allows updating the properties of an existing item
        by its ID.
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: string
      - description: Item update payload
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/domain.ItemUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Item updated successfully
          schema:
            $ref: '#/definitions/clients.SuccessRes'
        "400":
          description: Invalid input or bad request
          schema:
            $ref: '#/definitions/clients.AppError'
        "404":
          description: Item not found
          schema:
            $ref: '#/definitions/clients.AppError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/clients.AppError'
      security:
      - BearerAuth: []
      summary: Update an item
      tags:
      - Items
  /users:
    get:
      consumes:
      - application/json
      description: Lấy tất cả người dùng trong hệ thống
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.User'
            type: array
      security:
      - BearerAuth: []
      summary: Lấy danh sách người dùng
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Xóa người dùng khỏi hệ thống
      parameters:
      - description: ID người dùng
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - BearerAuth: []
      summary: Xóa người dùng theo ID
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Lấy thông tin người dùng dựa trên ID
      parameters:
      - description: ID người dùng
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
      security:
      - BearerAuth: []
      summary: Lấy thông tin người dùng theo ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Cập nhật thông tin người dùng theo ID
      parameters:
      - description: ID người dùng
        in: path
        name: id
        required: true
        type: string
      - description: Thông tin người dùng
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
      security:
      - BearerAuth: []
      summary: Cập nhật thông tin người dùng
      tags:
      - users
  /users/login:
    post:
      consumes:
      - application/json
      description: Đăng nhập người dùng và nhận token
      parameters:
      - description: Thông tin đăng nhập
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema: {}
      summary: Đăng nhập
      tags:
      - users
  /users/register:
    post:
      consumes:
      - application/json
      description: Tạo người dùng mới trong hệ thống
      parameters:
      - description: Thông tin người dùng
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.User'
      summary: Đăng ký người dùng mới
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
